package capstoneProject;

import javax.swing.*;
import java.awt.*;
import capstoneProject.ErrorLogger; // Make sure this utility exists

/* File Name: ErrorLogging
 * Purpose: Provides a GUI interface for users or developers to view logged error messages generated by ErrorLogger.
 * Date Completed: 4/16/2025
 */


public class ErrorLogging {
	public ErrorLogging() {
		JFrame frame = new JFrame("Error Log");
        frame.setSize(700, 600);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLayout(new BorderLayout());
        frame.setLocationRelativeTo(null);
        frame.getContentPane().setBackground(Color.WHITE);

        // === NavBar ===
        frame.add(new NavBar(frame), BorderLayout.NORTH);

        // === Text Area to Display Logs ===
        JTextArea logArea = new JTextArea();
        logArea.setEditable(false);
        logArea.setFont(new Font("Monospaced", Font.PLAIN, 14));
        logArea.setText(ErrorLogger.readLog()); // read from log file

        JScrollPane scrollPane = new JScrollPane(logArea);
        scrollPane.setBorder(BorderFactory.createTitledBorder("Error Log"));
        frame.add(scrollPane, BorderLayout.CENTER);

        // === Buttons at Bottom ===
        JPanel buttonPanel = new JPanel();
        JButton clearButton = new RoundedButton("Clear Log");
        JButton backButton = new RoundedButton("Back to Settings");

        buttonPanel.add(clearButton);
        buttonPanel.add(backButton);
        frame.add(buttonPanel, BorderLayout.SOUTH);

        // === Clear Log Action ===
        clearButton.addActionListener(e -> {
            int confirm = JOptionPane.showConfirmDialog(frame, "Are you sure you want to clear the log?",
                    "Confirm", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                ErrorLogger.clearLog();
                logArea.setText(""); // update UI
                JOptionPane.showMessageDialog(frame, "Log cleared successfully.");
            }
        });

        // === Back Button Action ===
        backButton.addActionListener(e -> {
            frame.dispose();
            new Settings(); // return to settings
        });

        frame.setVisible(true);

	}
}